description: Pipeline for parsing junipersrx firewall logs (flow pipeline)
processors:
#######################
## ECS Event Mapping ##
#######################
- set:
    field: event.kind
    value: event
- set:
    field: event.outcome
    value: success
    if: "ctx.junipersrx?.firewall?.tag != null"
- append:
    field: event.category
    value: network
- rename:
    field: junipersrx.firewall.application-risk
    target_field: event.risk_score
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['application-risk'] != null"
- append:
    field: event.type
    value: 
      - start
      - allowed
      - connection
    if: "ctx.junipersrx?.firewall?.tag.endsWith('CREATE') || ctx.junipersrx?.firewall?.tag.endsWith('UPDATE') || ctx.junipersrx?.firewall?.tag.endsWith('CREATE_LS') || ctx.junipersrx?.firewall?.tag.endsWith('UPDATE_LS')"
- append:
    field: event.type
    value: 
      - end
      - allowed
      - connection
    if: "ctx.junipersrx?.firewall?.tag.endsWith('CLOSE') || ctx.junipersrx?.firewall?.tag.endsWith('CLOSE_LS')"
- append:
    field: event.type
    value:
      - denied
      - connection
    if: "ctx.junipersrx?.firewall?.tag.endsWith('DENY') || ctx.junipersrx?.firewall?.tag.endsWith('DENY_LS')"
- set:
    field: event.action
    value: flow_started
    if: "ctx.junipersrx?.firewall?.tag.endsWith('CREATE') || ctx.junipersrx?.firewall?.tag.endsWith('UPDATE') || ctx.junipersrx?.firewall?.tag.endsWith('CREATE_LS') || ctx.junipersrx?.firewall?.tag.endsWith('UPDATE_LS')"
- set:
    field: event.action
    value: flow_close
    if: "ctx.junipersrx?.firewall?.tag.endsWith('CLOSE') || ctx.junipersrx?.firewall?.tag.endsWith('CLOSE_LS')"
- set:
    field: event.action
    value: flow_deny
    if: "ctx.junipersrx?.firewall?.tag.endsWith('DENY') || ctx.junipersrx?.firewall?.tag.endsWith('DENY_LS')"

####################################
## ECS Server/Destination Mapping ##
####################################
- rename:
    field: junipersrx.firewall.destination-address
    target_field: destination.ip
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['destination-address'] != null"
- set:
    field: server.ip
    value: '{{destination.ip}}'
    if: "ctx.destination?.ip != null"
- rename:
    field: junipersrx.firewall.nat-destination-address
    target_field: destination.nat.ip
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['nat-destination-address'] != null"
- convert:
    field: junipersrx.firewall.destination-port
    target_field: destination.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['destination-port'] != null"
- set:
    field: server.port
    value: '{{destination.port}}'
    if: "ctx.destination?.port != null"
- convert:
    field: server.port
    target_field: server.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.server?.port != null"
- convert:
    field: junipersrx.firewall.nat-destination-port
    target_field: destination.nat.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['nat-destination-port'] != null"
- set:
    field: server.nat.port
    value: '{{destination.nat.port}}'
    if: "ctx.destination?.nat?.port != null"
- convert:
    field: server.nat.port
    target_field: server.nat.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.server?.nat?.port != null"
- convert:
    field: junipersrx.firewall.bytes-from-server
    target_field: destination.bytes
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['bytes-from-server'] != null"
- set:
    field: server.bytes
    value: '{{destination.bytes}}'
    if: "ctx.destination?.bytes != null"
- convert:
    field: server.bytes
    target_field: server.bytes
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.server?.bytes != null"
- convert:
    field: junipersrx.firewall.packets-from-server
    target_field: destination.packets
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['packets-from-server'] !=null"
- set:
    field: server.packets
    value: '{{destination.packets}}'
    if: "ctx.destination?.packets != null"
- convert:
    field: server.packets
    target_field: server.packets
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.server?.packets != null"

###############################
## ECS Client/Source Mapping ##
###############################
- rename:
    field: junipersrx.firewall.source-address
    target_field: source.ip
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['source-address'] != null"
- set:
    field: client.ip
    value: '{{source.ip}}'
    if: "ctx.source?.ip != null"
- rename:
    field: junipersrx.firewall.nat-source-address
    target_field: source.nat.ip
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['nat-source-address'] != null"
- rename:
    field: junipersrx.firewall.sourceip
    target_field: source.ip
    ignore_missing: true
    if: "ctx.junipersrx?.firewall?.sourceip != null"
- convert:
    field: junipersrx.firewall.source-port
    target_field: source.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['source-port'] != null"
- set:
    field: client.port
    value: '{{source.port}}'
    if: "ctx.source?.port != null"
- convert:
    field: client.port
    target_field: client.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.client?.port != null"
- convert:
    field: junipersrx.firewall.nat-source-port
    target_field: source.nat.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['nat-source-port'] != null"
- set:
    field: client.nat.port
    value: '{{source.nat.port}}'
    if: "ctx.source?.nat?.port != null"
- convert:
    field: client.nat.port
    target_field: client.nat.port
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.client?.nat?.port != null"    
- convert:
    field: junipersrx.firewall.bytes-from-client
    target_field: source.bytes
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['bytes-from-client'] != null"
- set:
    field: client.bytes
    value: '{{source.bytes}}'
    if: "ctx.source?.bytes != null"
- convert:
    field: client.bytes
    target_field: client.bytes
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.client?.bytes != null"
- convert:
    field: junipersrx.firewall.packets-from-client
    target_field: source.packets
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['packets-from-client'] != null"
- set:
    field: client.packets
    value: '{{source.packets}}'
    if: "ctx.source?.packets != null"
- convert:
    field: client.packets
    target_field: client.packets
    type: long
    ignore_failure: true
    ignore_missing: true
    if: "ctx.client?.packets != null"
- rename:
    field: junipersrx.firewall.username
    target_field: source.user.name
    ignore_missing: true
    if: "ctx.junipersrx?.firewall?.username != null"

######################
## ECS Rule Mapping ##
######################
- rename:
    field: junipersrx.firewall.policy-name
    target_field: rule.name
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['policy-name'] != null"

#############################
## ECS Network/Geo Mapping ##
#############################
- rename:
    field: junipersrx.firewall.protocol-id
    target_field: network.iana_number
    ignore_missing: true
    if: "ctx.junipersrx?.firewall['protocol-id'] != null"
- geoip:
    field: source.ip
    target_field: source.geo
    ignore_missing: true
    if: "ctx.source?.geo == null"
- geoip:
    field: destination.ip
    target_field: destination.geo
    ignore_missing: true
    if: "ctx.destination?.geo == null"
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: source.ip
    target_field: source.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: destination.ip
    target_field: destination.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- geoip:
    field: source.nat.ip
    target_field: source.geo
    ignore_missing: true
    if: "ctx.source?.geo == null"
- geoip:
    field: destination.nat.ip
    target_field: destination.geo
    ignore_missing: true
    if: "ctx.destination?.geo == null"
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: source.nat.ip
    target_field: source.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
    if: "ctx.source?.as == null"
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: destination.nat.ip
    target_field: destination.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
    if: "ctx.destination?.as == null"
- rename:
    field: source.as.asn
    target_field: source.as.number
    ignore_missing: true
- rename:
    field: source.as.organization_name
    target_field: source.as.organization.name
    ignore_missing: true
- rename:
    field: destination.as.asn
    target_field: destination.as.number
    ignore_missing: true
- rename:
    field: destination.as.organization_name
    target_field: destination.as.organization.name
    ignore_missing: true
- script:
    lang: painless
    source: "ctx['network']['bytes'] = ctx.source.bytes + ctx.destination.bytes"
    if: "ctx?.source?.bytes != null && ctx?.destination?.bytes != null"
    ignore_failure: true
- script:
    lang: painless
    source: "ctx['network']['packets'] = ctx.client.packets + ctx.server.packets"
    if: "ctx?.client?.packets != null && ctx?.server?.packets != null"
    ignore_failure: true

#########################
## ECS Related Mapping ##
#########################
- append:
    if: 'ctx?.source?.ip != null'
    field: related.ip
    value: '{{source.ip}}'
- append:
    if: 'ctx?.destination?.ip != null'
    field: related.ip
    value: '{{destination.ip}}'
- append:
    if: 'ctx?.source?.nat?.ip != null'
    field: related.ip
    value: '{{source.nat.ip}}'
- append:
    if: 'ctx?.destination?.nat?.ip != null'
    field: related.ip
    value: '{{destination.nat.ip}}'

#############
## Cleanup ##
#############
- remove:
    field:
    - junipersrx.firewall.destination-port
    - junipersrx.firewall.nat-destination-port
    - junipersrx.firewall.bytes-from-client
    - junipersrx.firewall.packets-from-client
    - junipersrx.firewall.source-port
    - junipersrx.firewall.nat-source-port
    - junipersrx.firewall.bytes-from-server
    - junipersrx.firewall.packets-from-server
    ignore_missing: true

on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'